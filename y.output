
state 0
	$accept: .nlang $end 

	FUNC  shift 5
	.  error

	function  goto 2
	prefix_function  goto 4
	postfix_function  goto 3
	nlang  goto 1

state 1
	$accept:  nlang.$end 

	$end  accept
	.  error


state 2
	nlang:  function.    (1)

	.  reduce 1 (src line 49)


state 3
	function:  postfix_function.'{' '}' 
	function:  postfix_function.'{' EOL block_list EOL '}' 

	'{'  shift 6
	.  error


state 4
	postfix_function:  prefix_function.    (4)
	postfix_function:  prefix_function.value_type 

	STRING  shift 8
	INT  shift 9
	FLOAT  shift 10
	BOOL  shift 11
	SQL  shift 12
	.  reduce 4 (src line 64)

	value_type  goto 7

state 5
	prefix_function:  FUNC.ID '(' ')' 
	prefix_function:  FUNC.ID '(' argument_list ')' 

	ID  shift 13
	.  error


state 6
	function:  postfix_function '{'.'}' 
	function:  postfix_function '{'.EOL block_list EOL '}' 

	EOL  shift 15
	'}'  shift 14
	.  error


state 7
	postfix_function:  prefix_function value_type.    (5)

	.  reduce 5 (src line 68)


state 8
	value_type:  STRING.    (22)

	.  reduce 22 (src line 146)


state 9
	value_type:  INT.    (23)

	.  reduce 23 (src line 148)


state 10
	value_type:  FLOAT.    (24)

	.  reduce 24 (src line 149)


state 11
	value_type:  BOOL.    (25)

	.  reduce 25 (src line 150)


state 12
	value_type:  SQL.    (26)

	.  reduce 26 (src line 151)


state 13
	prefix_function:  FUNC ID.'(' ')' 
	prefix_function:  FUNC ID.'(' argument_list ')' 

	'('  shift 16
	.  error


state 14
	function:  postfix_function '{' '}'.    (2)

	.  reduce 2 (src line 55)


state 15
	function:  postfix_function '{' EOL.block_list EOL '}' 

	ID  shift 21
	.  error

	assignment  goto 19
	block  goto 18
	block_list  goto 17
	caller  goto 20

state 16
	prefix_function:  FUNC ID '('.')' 
	prefix_function:  FUNC ID '('.argument_list ')' 

	ID  shift 25
	')'  shift 22
	.  error

	argument  goto 24
	argument_list  goto 23

state 17
	function:  postfix_function '{' EOL block_list.EOL '}' 
	block_list:  block_list.EOL block 

	EOL  shift 26
	.  error


state 18
	block_list:  block.    (8)

	.  reduce 8 (src line 83)


state 19
	block:  assignment.    (10)

	.  reduce 10 (src line 92)


state 20
	block:  caller.    (11)

	.  reduce 11 (src line 96)


state 21
	assignment:  ID.ASSIGN value 
	caller:  ID.'(' ')' 
	caller:  ID.'(' value_list ')' 

	ASSIGN  shift 27
	'('  shift 28
	.  error


state 22
	prefix_function:  FUNC ID '(' ')'.    (6)

	.  reduce 6 (src line 74)


state 23
	prefix_function:  FUNC ID '(' argument_list.')' 
	argument_list:  argument_list.',' argument 

	')'  shift 29
	','  shift 30
	.  error


state 24
	argument_list:  argument.    (12)

	.  reduce 12 (src line 101)


state 25
	argument:  ID.value_type 

	STRING  shift 8
	INT  shift 9
	FLOAT  shift 10
	BOOL  shift 11
	SQL  shift 12
	.  error

	value_type  goto 31

state 26
	function:  postfix_function '{' EOL block_list EOL.'}' 
	block_list:  block_list EOL.block 

	ID  shift 21
	'}'  shift 32
	.  error

	assignment  goto 19
	block  goto 33
	caller  goto 20

state 27
	assignment:  ID ASSIGN.value 

	ID  shift 39
	STRING_LITERAL  shift 35
	SQL_LITERAL  shift 36
	INT_LITERAL  shift 37
	.  error

	value  goto 34
	caller  goto 38

state 28
	caller:  ID '('.')' 
	caller:  ID '('.value_list ')' 

	ID  shift 39
	STRING_LITERAL  shift 35
	SQL_LITERAL  shift 36
	INT_LITERAL  shift 37
	')'  shift 40
	.  error

	value  goto 42
	caller  goto 38
	value_list  goto 41

state 29
	prefix_function:  FUNC ID '(' argument_list ')'.    (7)

	.  reduce 7 (src line 78)


state 30
	argument_list:  argument_list ','.argument 

	ID  shift 25
	.  error

	argument  goto 43

state 31
	argument:  ID value_type.    (14)

	.  reduce 14 (src line 110)


state 32
	function:  postfix_function '{' EOL block_list EOL '}'.    (3)

	.  reduce 3 (src line 59)


state 33
	block_list:  block_list EOL block.    (9)

	.  reduce 9 (src line 87)


state 34
	assignment:  ID ASSIGN value.    (15)

	.  reduce 15 (src line 116)


state 35
	value:  STRING_LITERAL.    (16)

	.  reduce 16 (src line 122)


state 36
	value:  SQL_LITERAL.    (17)

	.  reduce 17 (src line 126)


state 37
	value:  INT_LITERAL.    (18)

	.  reduce 18 (src line 129)


state 38
	value:  caller.    (19)

	.  reduce 19 (src line 132)


state 39
	caller:  ID.'(' ')' 
	caller:  ID.'(' value_list ')' 

	'('  shift 28
	.  error


state 40
	caller:  ID '(' ')'.    (27)

	.  reduce 27 (src line 154)


state 41
	value_list:  value_list.',' value 
	caller:  ID '(' value_list.')' 

	')'  shift 45
	','  shift 44
	.  error


state 42
	value_list:  value.    (20)

	.  reduce 20 (src line 137)


state 43
	argument_list:  argument_list ',' argument.    (13)

	.  reduce 13 (src line 105)


state 44
	value_list:  value_list ','.value 

	ID  shift 39
	STRING_LITERAL  shift 35
	SQL_LITERAL  shift 36
	INT_LITERAL  shift 37
	.  error

	value  goto 46
	caller  goto 38

state 45
	caller:  ID '(' value_list ')'.    (28)

	.  reduce 28 (src line 158)


state 46
	value_list:  value_list ',' value.    (21)

	.  reduce 21 (src line 141)


20 terminals, 14 nonterminals
29 grammar rules, 47/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
63 working sets used
memory: parser 28/240000
9 extra closures
43 shift entries, 1 exceptions
20 goto entries
3 entries saved by goto default
Optimizer space used: output 54/240000
54 table entries, 0 zero
maximum spread: 20, maximum offset: 44
