
state 0
	$accept: .nlang $end 

	FUNC  shift 6
	.  error

	function  goto 3
	prefix_function  goto 5
	postfix_function  goto 4
	function_list  goto 2
	nlang  goto 1

state 1
	$accept:  nlang.$end 

	$end  accept
	.  error


state 2
	nlang:  function_list.    (1)
	function_list:  function_list.EOL function 

	EOL  shift 7
	.  reduce 1 (src line 51)


state 3
	function_list:  function.    (2)

	.  reduce 2 (src line 57)


state 4
	function:  postfix_function.'{' '}' 
	function:  postfix_function.'{' EOL block_list EOL '}' 

	'{'  shift 8
	.  error


state 5
	postfix_function:  prefix_function.    (6)
	postfix_function:  prefix_function.value_type 

	STRING  shift 10
	INT  shift 11
	FLOAT  shift 12
	BOOL  shift 13
	SQL  shift 14
	.  reduce 6 (src line 75)

	value_type  goto 9

state 6
	prefix_function:  FUNC.ID '(' ')' 
	prefix_function:  FUNC.ID '(' argument_list ')' 

	ID  shift 15
	.  error


state 7
	function_list:  function_list EOL.function 

	FUNC  shift 6
	.  error

	function  goto 16
	prefix_function  goto 5
	postfix_function  goto 4

state 8
	function:  postfix_function '{'.'}' 
	function:  postfix_function '{'.EOL block_list EOL '}' 

	EOL  shift 18
	'}'  shift 17
	.  error


state 9
	postfix_function:  prefix_function value_type.    (7)

	.  reduce 7 (src line 79)


state 10
	value_type:  STRING.    (24)

	.  reduce 24 (src line 157)


state 11
	value_type:  INT.    (25)

	.  reduce 25 (src line 159)


state 12
	value_type:  FLOAT.    (26)

	.  reduce 26 (src line 160)


state 13
	value_type:  BOOL.    (27)

	.  reduce 27 (src line 161)


state 14
	value_type:  SQL.    (28)

	.  reduce 28 (src line 162)


state 15
	prefix_function:  FUNC ID.'(' ')' 
	prefix_function:  FUNC ID.'(' argument_list ')' 

	'('  shift 19
	.  error


state 16
	function_list:  function_list EOL function.    (3)

	.  reduce 3 (src line 61)


state 17
	function:  postfix_function '{' '}'.    (4)

	.  reduce 4 (src line 66)


state 18
	function:  postfix_function '{' EOL.block_list EOL '}' 

	ID  shift 24
	.  error

	assignment  goto 22
	block  goto 21
	block_list  goto 20
	caller  goto 23

state 19
	prefix_function:  FUNC ID '('.')' 
	prefix_function:  FUNC ID '('.argument_list ')' 

	ID  shift 28
	')'  shift 25
	.  error

	argument  goto 27
	argument_list  goto 26

state 20
	function:  postfix_function '{' EOL block_list.EOL '}' 
	block_list:  block_list.EOL block 

	EOL  shift 29
	.  error


state 21
	block_list:  block.    (10)

	.  reduce 10 (src line 94)


state 22
	block:  assignment.    (12)

	.  reduce 12 (src line 103)


state 23
	block:  caller.    (13)

	.  reduce 13 (src line 107)


state 24
	assignment:  ID.ASSIGN value 
	caller:  ID.'(' ')' 
	caller:  ID.'(' value_list ')' 

	ASSIGN  shift 30
	'('  shift 31
	.  error


state 25
	prefix_function:  FUNC ID '(' ')'.    (8)

	.  reduce 8 (src line 85)


state 26
	prefix_function:  FUNC ID '(' argument_list.')' 
	argument_list:  argument_list.',' argument 

	')'  shift 32
	','  shift 33
	.  error


state 27
	argument_list:  argument.    (14)

	.  reduce 14 (src line 112)


state 28
	argument:  ID.value_type 

	STRING  shift 10
	INT  shift 11
	FLOAT  shift 12
	BOOL  shift 13
	SQL  shift 14
	.  error

	value_type  goto 34

state 29
	function:  postfix_function '{' EOL block_list EOL.'}' 
	block_list:  block_list EOL.block 

	ID  shift 24
	'}'  shift 35
	.  error

	assignment  goto 22
	block  goto 36
	caller  goto 23

state 30
	assignment:  ID ASSIGN.value 

	ID  shift 42
	STRING_LITERAL  shift 38
	SQL_LITERAL  shift 39
	INT_LITERAL  shift 40
	.  error

	value  goto 37
	caller  goto 41

state 31
	caller:  ID '('.')' 
	caller:  ID '('.value_list ')' 

	ID  shift 42
	STRING_LITERAL  shift 38
	SQL_LITERAL  shift 39
	INT_LITERAL  shift 40
	')'  shift 43
	.  error

	value  goto 45
	caller  goto 41
	value_list  goto 44

state 32
	prefix_function:  FUNC ID '(' argument_list ')'.    (9)

	.  reduce 9 (src line 89)


state 33
	argument_list:  argument_list ','.argument 

	ID  shift 28
	.  error

	argument  goto 46

state 34
	argument:  ID value_type.    (16)

	.  reduce 16 (src line 121)


state 35
	function:  postfix_function '{' EOL block_list EOL '}'.    (5)

	.  reduce 5 (src line 70)


state 36
	block_list:  block_list EOL block.    (11)

	.  reduce 11 (src line 98)


state 37
	assignment:  ID ASSIGN value.    (17)

	.  reduce 17 (src line 127)


state 38
	value:  STRING_LITERAL.    (18)

	.  reduce 18 (src line 133)


state 39
	value:  SQL_LITERAL.    (19)

	.  reduce 19 (src line 137)


state 40
	value:  INT_LITERAL.    (20)

	.  reduce 20 (src line 140)


state 41
	value:  caller.    (21)

	.  reduce 21 (src line 143)


state 42
	caller:  ID.'(' ')' 
	caller:  ID.'(' value_list ')' 

	'('  shift 31
	.  error


state 43
	caller:  ID '(' ')'.    (29)

	.  reduce 29 (src line 165)


state 44
	value_list:  value_list.',' value 
	caller:  ID '(' value_list.')' 

	')'  shift 48
	','  shift 47
	.  error


state 45
	value_list:  value.    (22)

	.  reduce 22 (src line 148)


state 46
	argument_list:  argument_list ',' argument.    (15)

	.  reduce 15 (src line 116)


state 47
	value_list:  value_list ','.value 

	ID  shift 42
	STRING_LITERAL  shift 38
	SQL_LITERAL  shift 39
	INT_LITERAL  shift 40
	.  error

	value  goto 49
	caller  goto 41

state 48
	caller:  ID '(' value_list ')'.    (30)

	.  reduce 30 (src line 169)


state 49
	value_list:  value_list ',' value.    (23)

	.  reduce 23 (src line 152)


20 terminals, 15 nonterminals
31 grammar rules, 50/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
64 working sets used
memory: parser 31/240000
9 extra closures
45 shift entries, 1 exceptions
22 goto entries
5 entries saved by goto default
Optimizer space used: output 57/240000
57 table entries, 0 zero
maximum spread: 20, maximum offset: 47
